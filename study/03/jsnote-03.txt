 JavaScript：_03

javaScript语言
	一、JS如何运行（JavaScript, jscript, VbScript, applet .... ）
	
	
	二、输出  (可以用于调试)
		alert(什么类型都可以);
		document.write("字符串");


三、如何在HTML文档中使用JS

	1. 使用<script></script>将JS语法嵌入到HTML中， 可以使用多个，每一个之间都是有关联的。
	2. href="javascript:代码";   <p><a href="javascript:document.write(name);">我的名字叫做</a></p>
	3. 事件中(后面课程有介绍)  form的submit  onclick 等等
             <form action="javascript:alert("abcdefg");"> </action>
	4. 写到外部文件中（.js） <script src="文件位置"></script>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

	命名规范：
	          1.一定要有意义
		  2.不能以数字开头，不能是系统运算符
		    不能是系统的关键字 if class session 等等  但是可用 var %if 
	
	大小写：  1.javascript  严格区分大小写
		  2.变量名和函数名  第一个单词 小写以后每个单词 首先字母大写 
		     aaa  bbb  ccc  -> aaaBbbCcc  （驼峰式命名） getElementById();
		  3.对象：每个单词首字母都要大写 例如：Date   javascript:new Date();
		                                              javascript:new Object();

	分号：   A:结构定义语句 （定义结构用）
			if(){

			}

			function(){

			}

			for(){

			}
			
			结构定义语句后不需要加 分号 ；

		 B:功能执行语句
			var a=100;
			alert();
			
			 功能执行语句后加 分号 ；
		
		注意： 如果每个语句都换行 不加分号不会出错
		       建议要加上

		注释：
			1。  //  单行注释
			2.  /* */  多行注释

		      作用 
		           a：编码中暂时保留
			   b：写注释文档
		           c: 调试程序用

	

四、变量

		1.关于内存 var a=10;  (程序独到这里把变量 加载到内存中去 ，关闭浏览器后再释放内存)

		2.声明方法  var 变量名=值;

		注意： javascript 是弱类型语言 （和php相同） 
			  PS:弱类型语言根据后面赋予的值 决定是什么类型。
			     强类型语言必须先声明值得类型。 如： int a=10;
		
		var a=10; 声明+赋值
		    a=10; 仅赋值

五、数据类型
		如何查看数据类型？
		可用  typeof 查看
		例如：
		<script>
			var a=900;
			alert(typeof(a));
		</script>
		 
		各种类型归类

		1.  number 数字型 (int float double) 注意：计算时还是按照 整型 ，浮点型，double型来计算

		2.  string (string char) 都是字符串类型
		
		3.  boolean （true false） 真 假 类型

		4.  object ( object array null ) 对象类型  包含对象和数组 注意：也是分别处理的。

		5.  undefine 木有声明变量


	整型声明方法

			var a=10;  (十进制 声明)
			var a=045; (八进制 声明？)
			var a=0xff; (十六进制 声明？)

	浮点型声明方法 
		(特点说明：浮点数是近似数  如：0.9999999999  无限接近 1 但不会等于 1) 
		（进行判断的时候 不能用 =  而是要用 >  <  >=  或 <= 来判断）
		☆ 浮点数不要用 = 号去判断！！！

			var f=10.5;
			var f=10.55;
			var f= 10.5E+10；

	字符串类型 （用于转义？？）
		' '  单引号
		" "  双引号   

		没有区别 所有转义都可以使用

**************************************************************************************************
六、运算符和表达式
	算术运算符号  + - * / % ++ --
	赋值运算符号  += -= *= /= %=
	条件运算符号  > < == >= <=  === != !==
	逻辑运算符号  && || ^				（&& 于 and ） （ || 或 or）
	位运算符号    >> >>> << | & ~
	其他运算符号  ? :


	1.算术运算符号
	   
	   + 号的特点	A:做加法
			B：链接字符串 （只要碰到字符串就全部变为字符串）
			   例如： <script> 
					var a=10+5+"12abc"+20;
					alert(a);
				</script>
				弹窗结果：1512abc20

	  % 的特点	一般指用于整数
			？？？？？

			使用这个运算符的目的
			1 ： 使 xxx 被 xxx 整除
			2：  求一段范围 不超过某个数字  101除以10 余数1  1001 除以10 余数1 （不会超过10）

	   ++ -- 的特点
			可以用在前面也可以用在后面 ？？？

	2。赋值运算符号
	3。条件运算符号
			特点：两边比较的时候 要用相同类型的数据类型 进行比较 
			      比较出来的结果是 boolean型 （true false）
	4.逻辑运算符号 
			目的：将多个条件链接在一起 用于的关系 或  或的关系
			特点：短路！！（就是前面的条件成立的话 就不去管后面的条件了）（ || 会短路  | 就不会短路 ）

	5.位运算符号   
			| 或 运算符
			特点：把数都看成位
			例如： <script>
					var a=76;
					var b=34;

					alert(a|b);
				</script>

				/*
					00000000 00000000 00000000 01001100     76=64+8+4
					00000000 00000000 00000000 00100010	34=32+2
					-----------------------------------
					00000000 00000000 00000000 01101110     结果是  110
				*/
			 
			 >>  <<     左移  友移  （乘2 左移动一下  除以2  右移动一下）移动的空位补0
	
					00000000 00000000 00000000 01101110  >>  00000000 00000000 00000000 00110111   
					                   十进制：110					十进制：55
					00000000 00000000 00000000 01101110  <<  00000000 00000000 00000000 11011100
							   十进制：110					十进制：220
				 
				 >>>	无符号右移  第1位是1的情况下 为了防止夸平台 补位不同（有的系统补1 有的补0）
					无符号右移统一补0 最左边一位

	6.其他运算符号
			？ ：
			<script>
				alert(true ? "www" : "yyy");
					
			</script> /* 结果是 www*/
			
			<script>
				var a=true ? "www" : "yyy";
				alert(a);
					
			</script> /* 结果是 www*/
**************************************************************************************************************************
七、流程控制

		1.顺序结构
			（就是程序从上往下走）

		2.条件结构 --分支结构--选择结构
			a。单路分支
				if(boolean){

				}
				/* 括号中添加布尔型条件 成立就执行 不成立就不执行 */
				
			b。双路f分支
				if(boolean){

				}else{
				
				}

			c。多路分支
				if(boolean){

				}else if(boolean){
				
				}else if(boolean){

				}.....
				}else {

				}
			
			使用范围： if else 用于范围  学生成绩


			  表达式：有变量和运算符参与的 就是表达式！ 例如： a=10; 就是表达式

				switch(变量){
					case 值1:
						表达式
						[break;]
				 	case ...

					case 值2:
					
					[default]
				}

			使用范围： switch case 用于单个值得匹配  比如：写一个电梯程序 到哪楼？按5楼 按6楼 按7楼
			注意：     其中变量选择 最好使用 “整型” “字符” “字符串” 类型
			
			
			d。嵌套分支

				if(boolean){
					 if(){
						while(){

						}
					}
				}else {
					for(){
						while(){

						}
					}
				}
				
				
				
			
		3.循环结构

			1. while() 

			条件型 先判断再执行
			（）内的参数必须是 boolean 型的

			<script>
				while(true){
					document.write("abcdefg<br>");
				}
			</script> /* 程序死循环 一直出现 abcdefg*/


			计数器循环1 ：
			
			<script>
				a=1;
				while(a>100){
					document.write(a+"臭小子！")
					a++;
				}
			</script>

			计数器循环2 ：
			
			<script>
				var z=0;
				while(z<50){
					var a=0;
					while(a<50){
						document.write(a+"臭小子！")
						a++;
					}
					z++;
					document.write(z+"####$$$$$$");
				}
			</script>


			2. do-while();

			先执行再判断


			3. for()

			适用于计数循环

**************************************************************************************************************************
八、函数
九、对象
十、内置JS对象
十一、数组



DOM和BOM

jQuery